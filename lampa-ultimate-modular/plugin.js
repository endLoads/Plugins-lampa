(() => {
    // –û–∂–∏–¥–∞–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ API –ø–ª–∞–≥–∏–Ω–æ–≤ LAMPA
    const initPlugin = () => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
        if (window.Plugin && typeof Plugin.register === 'function') {
            // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω
            Plugin.register('ultimate_modular', {
                version: '1.0.0',
                icon: 'icon.png',
                init: function() {
                    console.log('[Ultimate Modular] Plugin initialized!');

                    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞
                    const LUM = {
                        // –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã
                        themes: {
                            dark_teal: {
                                name: "–¢–µ–º–Ω–∞—è –±–∏—Ä—é–∑–æ–≤–∞—è",
                                colors: {
                                    '--primary': '#00c8c8',
                                    '--secondary': '#007a7a',
                                    '--accent': '#ff3c5a',
                                    '--dark': '#0f1a1f',
                                    '--card-bg': '#1a2a2f',
                                    '--text': '#e0f0f0'
                                }
                            }
                        },
                        
                        settings: {
                            theme: 'dark_teal',
                            cardSize: 120,
                            animations: true,
                            activeModules: ['cards', 'ratings', 'vpn']
                        },
                        
                        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
                        init: function() {
                            this.loadThemes(() => {
                                this.applyTheme();
                                this.loadCSS();
                                this.loadModules();
                                this.addMenu();
                                console.log('Ultimate Modular initialized');
                            });
                        },
                        
                        // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–º –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ —Ñ–∞–π–ª–∞
                        loadThemes: function(callback) {
                            const themesScript = document.createElement('script');
                            themesScript.src = 'https://endloads.github.io/pl-lm/lampa-ultimate-modular/assets/themes.js';
                            themesScript.onload = () => {
                                if (window.LUM_Themes) {
                                    this.themes = window.LUM_Themes;
                                    console.log('Themes loaded:', Object.keys(this.themes).length);
                                }
                                if (callback) callback();
                            };
                            themesScript.onerror = () => {
                                console.error('Failed to load themes');
                                if (callback) callback();
                            };
                            document.head.appendChild(themesScript);
                        },
                        
                        // –ó–∞–≥—Ä—É–∑–∫–∞ CSS
                        loadCSS: function() {
                            this.cssLink = document.createElement('link');
                            this.cssLink.rel = 'stylesheet';
                            this.cssLink.href = 'https://endloads.github.io/pl-lm/lampa-ultimate-modular/assets/styles.css';
                            document.head.appendChild(this.cssLink);
                        },
                        
                        // –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π
                        loadModules: function() {
                            this.moduleScripts = [];
                            this.settings.activeModules.forEach(module => {
                                const script = document.createElement('script');
                                script.src = `https://endloads.github.io/pl-lm/lampa-ultimate-modular/modules/${module}.js`;
                                script.async = true;
                                this.moduleScripts.push(script);
                                document.head.appendChild(script);
                            });
                        },
                        
                        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é
                        addMenu: function() {
                            Lampa.SettingsMenu.add('ultimate_modular', {
                                name: 'Ultimate Modular',
                                icon: 'icon.png',
                                component: {
                                    template: `
                                        <div class="settings">
                                            <div class="settings__title">Ultimate Modular</div>
                                            <div class="settings-list">
                                                <div class="settings-list__item" data-component="themes"></div>
                                                <div class="settings-list__item" data-component="modules"></div>
                                                <div class="settings-list__item" data-component="profiles"></div>
                                            </div>
                                        </div>
                                    `,
                                    mounted() {
                                        this.renderComponents();
                                    },
                                    renderComponents() {
                                        this.html.find('[data-component="themes"]').html(this.renderThemes());
                                        this.html.find('[data-component="modules"]').html(this.renderModules());
                                        this.html.find('[data-component="profiles"]').html(this.renderProfiles());
                                    },
                                    renderThemes() {
                                        return `
                                            <div class="lum-theme-selector">
                                                <div class="lum-title">–í—ã–±–æ—Ä —Ç–µ–º—ã</div>
                                                <div class="lum-themes-grid">
                                                    ${Object.entries(LUM.themes).map(([id, theme]) => `
                                                        <div class="lum-theme-option" data-theme="${id}" 
                                                            style="background: linear-gradient(135deg, 
                                                                ${theme.colors['--dark'] || '#0f1a1f'}, 
                                                                ${theme.colors['--card-bg'] || '#1a2a2f'})">
                                                            <div class="lum-theme-name">${theme.name}</div>
                                                        </div>
                                                    `).join('')}
                                                </div>
                                            </div>
                                        `;
                                    },
                                    renderModules() {
                                        return `
                                            <div class="lum-module-manager">
                                                <div class="lum-title">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è–º–∏</div>
                                                <div class="lum-modules-list">
                                                    <div class="lum-module-item">
                                                        <label class="lum-switch">
                                                            <input type="checkbox" checked data-module="cards">
                                                            <span class="lum-slider"></span>
                                                        </label>
                                                        <div class="lum-module-info">
                                                            <div class="lum-module-icon">üé¨</div>
                                                            <div>
                                                                <div class="lum-module-name">–£–ª—É—á—à–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏</div>
                                                                <div class="lum-module-desc">–ë–µ–π–¥–∂–∏, –ª–æ–≥–æ—Ç–∏–ø—ã, –¥–µ–π—Å—Ç–≤–∏—è</div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="lum-module-item">
                                                        <label class="lum-switch">
                                                            <input type="checkbox" checked data-module="ratings">
                                                            <span class="lum-slider"></span>
                                                        </label>
                                                        <div class="lum-module-info">
                                                            <div class="lum-module-icon">‚≠ê</div>
                                                            <div>
                                                                <div class="lum-module-name">–†–µ–π—Ç–∏–Ω–≥–∏</div>
                                                                <div class="lum-module-desc">IMDb –∏ –ö–∏–Ω–æ–ø–æ–∏—Å–∫</div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="lum-module-item">
                                                        <label class="lum-switch">
                                                            <input type="checkbox" checked data-module="vpn">
                                                            <span class="lum-slider"></span>
                                                        </label>
                                                        <div class="lum-module-info">
                                                            <div class="lum-module-icon">üõ°Ô∏è</div>
                                                            <div>
                                                                <div class="lum-module-name">VPN Checker</div>
                                                                <div class="lum-module-desc">–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è</div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="lum-module-item">
                                                        <label class="lum-switch">
                                                            <input type="checkbox" data-module="analytics">
                                                            <span class="lum-slider"></span>
                                                        </label>
                                                        <div class="lum-module-info">
                                                            <div class="lum-module-icon">üìä</div>
                                                            <div>
                                                                <div class="lum-module-name">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</div>
                                                                <div class="lum-module-desc">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        `;
                                    },
                                    renderProfiles() {
                                        return `
                                            <div class="lum-profile-manager">
                                                <div class="lum-title">–ü—Ä–æ—Ñ–∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫</div>
                                                <div class="lum-profile-actions">
                                                    <div class="lum-button" data-action="save-tv">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å TV –ø—Ä–æ—Ñ–∏–ª—å</div>
                                                    <div class="lum-button" data-action="save-mobile">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å Mobile –ø—Ä–æ—Ñ–∏–ª—å</div>
                                                </div>
                                            </div>
                                        `;
                                    }
                                }
                            });
                        },
                        
                        // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã
                        applyTheme: function() {
                            const theme = this.themes[this.settings.theme] || this.themes.dark_teal;
                            if (!theme) return;
                            
                            Object.entries(theme.colors).forEach(([key, value]) => {
                                document.documentElement.style.setProperty(key, value);
                            });
                            
                            // –ê–Ω–∏–º–∞—Ü–∏—è —Å–º–µ–Ω—ã —Ç–µ–º—ã
                            document.body.classList.add('theme-changing');
                            setTimeout(() => {
                                document.body.classList.remove('theme-changing');
                            }, 500);
                            
                            console.log(`Theme applied: ${this.settings.theme}`);
                        },
                        
                        // –°–º–µ–Ω–∞ —Ç–µ–º—ã
                        changeTheme: function(themeId) {
                            if (!this.themes[themeId]) {
                                console.error(`Theme not found: ${themeId}`);
                                return;
                            }
                            
                            this.settings.theme = themeId;
                            this.applyTheme();
                            
                            // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage
                            localStorage.setItem('lum_theme', themeId);
                        },
                        
                        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
                        saveProfile: function(name, settings) {
                            const profile = {
                                name,
                                ...settings,
                                timestamp: Date.now()
                            };
                            
                            localStorage.setItem(`lum_profile_${name}`, JSON.stringify(profile));
                            localStorage.setItem('lum_current_profile', name);
                            console.log(`Profile saved: ${name}`);
                        },
                        
                        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π
                        setupEventListeners: function() {
                            this.clickHandler = (e) => {
                                // –°–º–µ–Ω–∞ —Ç–µ–º—ã
                                const themeOption = e.target.closest('.lum-theme-option');
                                if (themeOption) {
                                    const themeId = themeOption.dataset.theme;
                                    this.changeTheme(themeId);
                                    return;
                                }
                                
                                // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π
                                const profileButton = e.target.closest('.lum-button');
                                if (profileButton && profileButton.dataset.action) {
                                    if (profileButton.dataset.action === 'save-tv') {
                                        this.saveProfile('tv', {
                                            cardSize: 130,
                                            theme: this.settings.theme,
                                            activeModules: ['cards', 'ratings', 'vpn']
                                        });
                                        Lampa.Noty.show('TV –ø—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω!');
                                    }
                                    else if (profileButton.dataset.action === 'save-mobile') {
                                        this.saveProfile('mobile', {
                                            cardSize: 100,
                                            theme: this.settings.theme,
                                            activeModules: ['cards', 'ratings']
                                        });
                                        Lampa.Noty.show('Mobile –ø—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω!');
                                    }
                                }
                            };
                            
                            document.addEventListener('click', this.clickHandler);
                        },
                        
                        // –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞
                        destroy: function() {
                            // –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
                            if (this.clickHandler) {
                                document.removeEventListener('click', this.clickHandler);
                            }
                            
                            // –£–¥–∞–ª–µ–Ω–∏–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
                            Lampa.SettingsMenu.remove('ultimate_modular');
                            
                            // –£–¥–∞–ª–µ–Ω–∏–µ CSS
                            if (this.cssLink) {
                                this.cssLink.remove();
                            }
                            
                            // –£–¥–∞–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ –º–æ–¥—É–ª–µ–π
                            if (this.moduleScripts) {
                                this.moduleScripts.forEach(script => script.remove());
                            }
                            
                            // –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π —Ç–µ–º—ã
                            Object.keys(this.themes.dark_teal.colors).forEach(key => {
                                document.documentElement.style.removeProperty(key);
                            });
                        }
                    };

                    // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–º—ã –∏–∑ localStorage
                    const savedTheme = localStorage.getItem('lum_theme');
                    if (savedTheme && LUM.themes[savedTheme]) {
                        LUM.settings.theme = savedTheme;
                    }

                    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Lampa
                    Lampa.Listener.follow('app', (e) => {
                        if (e.type === 'ready') {
                            LUM.setupEventListeners();
                            LUM.init();
                        }
                    });

                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ LUM –¥–ª—è —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è
                    this.LUM = LUM;
                },
                destroy: function() {
                    console.log('[Ultimate Modular] Plugin destroyed');
                    
                    // –£–¥–∞–ª—è–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
                    document.querySelectorAll('[data-ultimate-modular]').forEach(el => el.remove());
                    
                    // –£–¥–∞–ª—è–µ–º —Å—Ç–∏–ª–∏
                    const styles = document.getElementById('ultimate-modular-styles');
                    if (styles) styles.remove();
                    
                    // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º LUM
                    if (this.LUM && typeof this.LUM.destroy === 'function') {
                        this.LUM.destroy();
                     // –ü—Ä–∏–º–µ—Ä: –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                    Lampa.Listener.follow('app', (e) => {
                        if (e.type === 'ready') {
                            const button = document.createElement('div');
                            button.innerHTML = `
                                <div class="selector __margined __compact">
                                    <div class="selector__title">Ultimate Modular</div>
                                </div>
                            `;
                            button.style.margin = '15px';
                            button.style.cursor = 'pointer';
                            button.addEventListener('click', () => {
                                alert('Ultimate Modular Plugin is working!');
                            });
                            
                            const header = document.querySelector('.head__content');
                            if (header) header.appendChild(button);
                        }
                    });
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏
                    const css = `
                        [data-ultimate-modular] {
                            transition: transform 0.2s;
                        }
                        [data-ultimate-modular]:hover {
                            transform: scale(1.05);
                        }
                        [data-ultimate-modular] .selector__icon {
                            background: linear-gradient(45deg, #6a11cb, #2575fc);
                        }
                    `;
                    const style = document.createElement('style');
                    style.id = 'ultimate-modular-styles';
                    style.textContent = css;
                    document.head.appendChild(style);
                    
                    // ... –≤–∞—à –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–¥ ...
                }
                destroy: function() {
                    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–ª–∞–≥–∏–Ω–∞
                    console.log('[Ultimate Modular] Plugin destroyed');
                    
                    // –£–¥–∞–ª—è–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
                    document.querySelectorAll('[data-ultimate-modular]').forEach(el => el.remove());
                    
                    // –£–¥–∞–ª—è–µ–º —Å—Ç–∏–ª–∏
                    const styles = document.getElementById('ultimate-modular-styles');
                    if (styles) styles.remove();
                }
            });
        } else {
            // –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ 100–º—Å –µ—Å–ª–∏ API –Ω–µ –≥–æ—Ç–æ–≤–æ
            setTimeout(initPlugin, 100);
        }
    };

    // –°—Ç–∞—Ä—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    if (document.readyState === 'complete') {
        initPlugin();
    } else {
        window.addEventListener('load', initPlugin);
    }
